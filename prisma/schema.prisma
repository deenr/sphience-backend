generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Device {
  id                     String           @id @default(cuid())
  name                   String
  shortDescription       String
  longDescription        String
  areaOfInterest         AreaOfInterest?
  imageUrl               String?
  locationName           String
  street                 String
  postcode               String
  city                   String
  country                String
  additionalLocationInfo String?
  reservations           Reservation[]
  deviceDocuments        DeviceDocument[]
  createdAt              DateTime         @default(now())
  updatedAt              DateTime         @updatedAt
}

model Reservation {
  id            String   @id @default(cuid())
  deviceId      String
  device        Device   @relation(fields: [deviceId], references: [id])
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  startDateTime DateTime
  endDateTime   DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([deviceId, userId])
  @@index([startDateTime, endDateTime])
}

model User {
  id              String           @id @default(cuid())
  firstName       String
  lastName        String
  email           String           @unique
  password        String
  role            Role             @default(STUDENT)
  accessToken     String?
  refreshToken    String?
  reservations    Reservation[]
  deviceDocuments DeviceDocument[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@index([email])
}

model DeviceDocument {
  id        String   @id @default(cuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  device    Device   @relation(fields: [deviceId], references: [id])
  userId    String
  deviceId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, deviceId])
}

enum Role {
  ADMIN
  PROFESSOR
  RESEARCHER
  STUDENT
}

enum AreaOfInterest {
  CHEMISTRY
  COMMUNICATION
  COMPUTER_SCIENCE
  CONSTRUCTION_AND_ARCHITECTURE
  ECONOMICS_AND_MANAGEMENT
  EDUCATION
  ELECTRONICS
  ENGINEERING
  ENTREPRENEURSHIP
}
